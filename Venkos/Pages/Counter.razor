@page "/counter"
@inject IAuthorService AuthorService

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="GetAuthors">Show</button>

<input 
    @bind-value="CurrentAuthor.Name"
    @bind-value:event="oninput"
/>
<button class="btn btn-primary" @onclick="AddAuthor">Add</button>

@foreach (var author in Authors)
{
    <div>
        @author.Name
        <button class="btn btn-primary" @onclick="() => RemoveAuthor(author)">Remove</button>
    </div>
}

@code {
    int currentCount = 0;

    Author CurrentAuthor = new Author();

    IEnumerable<Author> Authors = new List<Author>();

    void GetAuthors()
    {
        Authors = AuthorService.GetAuthors();
    }

    void EditAuthor()
    {
        if (CurrentAuthor.Id > 0)
        {

        }
    }

    void AddAuthor()
    {
        if (!string.IsNullOrWhiteSpace(CurrentAuthor.Name))
        {
            AuthorService.AddAuthor(CurrentAuthor);
            CurrentAuthor = new Author();
            GetAuthors();
        }
    }

    void RemoveAuthor(Author author){
        AuthorService.DeleteAuthor(author);
        GetAuthors();
    }

    protected override async Task OnInitializedAsync()
    { 
        GetAuthors();      
    }
}
